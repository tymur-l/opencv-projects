# CUDA 12, so requires nvidia driver >=525.60.13
# https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#id5
# FROM quay.io/jupyter/tensorflow-notebook:cuda-2024-04-19 as jupyter-base

# Using pytorch image instead with CUDA 11, because OS has older nvidia drivers
FROM quay.io/jupyter/pytorch-notebook:cuda11-2024-05-06 as jupyter-base

# Install the same dependencies in the same environment where OpenCV is
# expected to be running
COPY ./conda-requirements.txt /tmp/requirements.txt
RUN mamba install --yes --file /tmp/requirements.txt && \
  mamba clean --all -f -y && \
  fix-permissions "${CONDA_DIR}" && \
  fix-permissions "/home/${NB_USER}"

# FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04 as cuda
FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 as cuda

# Copy Nvidia Codec SDK
COPY ./build/deps/nvidia-codec-sdk/Interface/*.h /usr/local/cuda/include
COPY ./build/deps/nvidia-codec-sdk/Lib/linux/stubs/x86_64/*.so /usr/local/cuda/lib64

FROM cuda as opencv-cuda-python-build

USER root

RUN <<EOF
export DEBIAN_FRONTEND=noninteractive
apt update -y
apt install -y --no-install-recommends software-properties-common
EOF

# Install python3.11
RUN <<EOF
export DEBIAN_FRONTEND=noninteractive
export PYTHON_VERSION="3.11.10-1+jammy1"

add-apt-repository -y ppa:deadsnakes/ppa
apt update -y
apt install -y --no-install-recommends \
  python3.11="${PYTHON_VERSION}" \
  python3.11-dev="${PYTHON_VERSION}" \
  python3.11-distutils \
  python3.11-gdbm
EOF

# Install build dependencies
RUN <<EOF
export DEBIAN_FRONTEND=noninteractive
export FFMPEG_VERSION="7:4.4.2-0ubuntu0.22.04.1"

apt update -y
apt install -y --no-install-recommends \
  python3-numpy=1:1.21.5-1ubuntu22.04.1 \
  python3-pip=22.0.2+dfsg-1ubuntu0.4 \
  \
  cmake=3.22.1-1ubuntu1.22.04.2 g++=4:11.2.0-1ubuntu1 gcc=4:11.2.0-1ubuntu1 ninja-build=1.10.1-1 \
  git=1:2.34.1-1ubuntu1.11 \
  rsync=3.2.7-0ubuntu0.22.04.2 \
  curl=7.81.0-1ubuntu1.18 \
  unzip=6.0-26ubuntu3.1 \
  \
  libpng-dev=1.6.37-3build5 libjpeg-dev=8c-2ubuntu10 libopenexr-dev=2.5.7-1 libtiff-dev=4.3.0-6ubuntu0.10 \
  libwebp-dev=1.2.2-2ubuntu0.22.04.2 \
  \
  libgstreamer-plugins-base1.0-dev=1.20.1-1ubuntu0.2 libgstreamer1.0-dev=1.20.3-0ubuntu1 \
  \
  libgtk-3-dev=3.24.33-1ubuntu2.2 libgtkglext1-dev=1.2.0-11 \
  \
  "libavutil-dev=${FFMPEG_VERSION}" \
  "libavcodec-dev=${FFMPEG_VERSION}" \
  "libavformat-dev=${FFMPEG_VERSION}" \
  "libavdevice-dev=${FFMPEG_VERSION}" \
  "libavfilter-dev=${FFMPEG_VERSION}" \
  "libswscale-dev=${FFMPEG_VERSION}" \
  "libswresample-dev=${FFMPEG_VERSION}" \
  "libpostproc-dev=${FFMPEG_VERSION}"
EOF

# Make python3.11 default
RUN rm -rf /usr/bin/python3 && ln -s /usr/bin/python3.11 /usr/bin/python3

# Ensure pip is updated
RUN pip install --upgrade pip

COPY --from=jupyter-base --chown=root:root /opt/conda /opt/conda

# Install protobuf
RUN <<EOF
curl -L -o /tmp/protobuf.zip https://github.com/protocolbuffers/protobuf/releases/download/v26.1/protoc-26.1-linux-x86_64.zip
unzip /tmp/protobuf.zip -x "readme.txt" -d /usr/local
EOF

ARG BUILD_USER="opencv"
RUN adduser "${BUILD_USER}"

USER "${BUILD_USER}"

WORKDIR "/home/${BUILD_USER}"

# Clone OpenCV sources and checkout proper versions
RUN <<EOF
git clone --depth 1 --branch '80' 'https://github.com/opencv/opencv-python.git'
cd opencv-python

git submodule init

OPEN_CV_VERSION='4.9.0'
git submodule set-branch "${OPEN_CV_VERSION}" --branch -- opencv
git submodule set-branch "${OPEN_CV_VERSION}" --branch -- opencv_contrib
git submodule set-branch "${OPEN_CV_VERSION}" --branch -- opencv_extra

git submodule update --depth 1 --single-branch
EOF

WORKDIR "/home/${BUILD_USER}/opencv-python"

VOLUME /home/${BUILD_USER}/scripts
VOLUME /home/${BUILD_USER}/build
